from Crypto.Cipher import Blowfish
from Crypto.Util.Padding import pad, unpad
from Crypto.Random import get_random_bytes

# Asking user to provide plaintext
plaintext = input("Enter plaintext: ").encode('utf-8')

# Generating a random key and initialization vector
key = get_random_bytes(16)
iv = get_random_bytes(Blowfish.block_size)

print("Provided text sample: ", plaintext.decode('utf-8'))

# Encrypting the plaintext using Blowfish in CBC mode
def _encrypt(plaintext):
    cipher = Blowfish.new(key, Blowfish.MODE_CBC, iv=iv)
    ciphertext = cipher.encrypt(pad(plaintext, Blowfish.block_size))
    return ciphertext

ciphertext = _encrypt(plaintext)
print("Encrypted text sample: ", ciphertext)


# Decrypting the ciphertext using Blowfish in CBC mode
def _decrypt(ciphertext):
    cipher = Blowfish.new(key, Blowfish.MODE_CBC, iv=iv)
    plaintext = unpad(cipher.decrypt(ciphertext), Blowfish.block_size)
    return plaintext

plaintext = _decrypt(ciphertext)
print("Decrypted sample text: ", plaintext.decode('utf-8'))
